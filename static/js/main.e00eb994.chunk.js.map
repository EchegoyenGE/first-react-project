{"version":3,"sources":["Data.js","List.js","index.js"],"names":["Data","country","console","log","className","name","capital","population","languages","map","lang","nativeName","src","flag","alt","List","countries","Title","NoCountry","App","useState","originalCountries","filtCountries","setcountries","setnewCountry","useEffect","setTimeout","fetch","then","response","json","type","onChange","event","newCount","target","value","toLowerCase","result","filter","includes","length","ReactDOM","render","document","getElementById"],"mappings":"6MAkBeA,EAlBF,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAGX,OADAC,QAAQC,IAAIF,GAEV,sBAAKG,UAAU,YAAf,UACE,6BAAKH,EAAQI,OACb,2CAAcJ,EAAQK,WACtB,8CAAiBL,EAAQM,cACzB,oCAAM,4CACJ,6BACIN,EAAQO,UAAUC,KAAI,SAACC,GAAD,OAAU,mCAAMA,EAAKC,WAAX,eAGtC,qBAAKP,UAAU,OAAOQ,IAAKX,EAAQY,KAAMC,IAAKb,EAAQI,WCI/CU,EAjBF,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACZ,OACE,qBAAKZ,UAAU,OAAf,SACI,6BAEIY,EACGP,KAAI,SAACR,GAAD,OACH,6BACGA,EAAQI,eCFvBY,G,MAAQ,kBAAM,mDAEdC,EAAY,WAChB,OACE,8BACE,0DAKAC,EAAM,WACV,MAAkCC,mBAAS,CACzCC,kBAAmB,GACnBC,cAAe,KAFjB,mBAAON,EAAP,KAAkBO,EAAlB,KAIA,EAAoCH,mBAAS,IAA7C,mBAAmBI,GAAnB,WAEAC,qBAAU,WAERC,YAAW,WACTC,MAAM,wCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAACE,GACLP,EAAa,CACXF,kBAAmBS,EACnBR,cAAeQ,SAGpB,OAEF,IAcH,OACE,sBAAK1B,UAAU,YAAf,UACE,cAAC,EAAD,IACA,+BACE,uBAAO2B,KAAK,OAAMC,SAhBH,SAACC,GAEpB,IAAMC,EAAWD,EAAME,OAAOC,MAAMC,cACpCb,EAAcU,GAEd,IAAMI,EAAStB,EAAUK,kBAAkBkB,QAAO,SAACtC,GAAD,OAAaA,EAAQI,KAAKgC,cAAcG,SAASN,MACnGX,EAAa,2BACRP,GADO,IAEVM,cAAegB,UAWZtB,EAAUM,cAAcmB,OAAS,EAClC,cAAC,EAAD,CAAMzB,UAAWA,EAAUM,gBACU,IAAnCN,EAAUM,cAAcmB,OACvB,cAAC,EAAD,IACA,GAGiC,IAAnCzB,EAAUM,cAAcmB,OACzB,cAAC,EAAD,CAAMxC,QAASe,EAAUM,cAAc,KACvC,OAMRoB,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.e00eb994.chunk.js","sourcesContent":["const Data = ({country}) => {\r\n\r\n    console.log(country);\r\n    return(\r\n      <div className=\"data-list\">\r\n        <h1>{country.name}</h1>\r\n        <h4>Capital: {country.capital}</h4>\r\n        <h4>Population: {country.population}</h4>\r\n        <div> <h4>Languages:</h4> \r\n          <ul> \r\n            { country.languages.map((lang) => <li> {lang.nativeName} </li> ) } \r\n          </ul> \r\n        </div>\r\n        <img className=\"flag\" src={country.flag} alt={country.name}/>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Data","const List = ({ countries }) => {\r\n    return (\r\n      <div className=\"list\">\r\n          <ul>\r\n            {\r\n              countries\r\n                .map((country) => \r\n                  <li>\r\n                    {country.name}\r\n                  </li>\r\n                )\r\n            }\r\n          </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default List","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Data from './Data';\nimport List from './List';\nimport \"./index.css\";\n\nconst Title = () => <h1>Search country:</h1>\n\nconst NoCountry = () => {\n  return (\n    <div>\n      <h2>There is no countries</h2>\n    </div>\n  )\n}\n \nconst App = () => {\n  const [countries, setcountries] = useState({\n    originalCountries: [],\n    filtCountries: []\n  });\n  const [newCountry, setnewCountry] = useState(\"\");\n\n  useEffect(() =>{\n\n    setTimeout(() => {\n      fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then(response => response.json())\n        .then((json) => {\n          setcountries({\n            originalCountries: json,\n            filtCountries: json\n          })\n        });\n    }, 1000);\n\n  } ,[]);\n\n  const handleChange = (event) =>{\n\n    const newCount = event.target.value.toLowerCase();\n    setnewCountry(newCount);\n\n    const result = countries.originalCountries.filter((country) => country.name.toLowerCase().includes(newCount));\n    setcountries({\n      ...countries,\n      filtCountries: result\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <Title />\n      <form>\n        <input type='text'onChange={handleChange}/>\n      </form>\n      { \n        (countries.filtCountries.length > 1)?\n        <List countries={countries.filtCountries} />:\n        ((countries.filtCountries.length === 0)\n          ?<NoCountry />\n          :[])\n      }\n      {\n        (countries.filtCountries.length === 1)?\n        <Data country={countries.filtCountries[0]}/>:\n        []\n      }\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}